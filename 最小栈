//https://leetcode-cn.com/explore/interview/card/bytedance/245/data-structure/1049/
//设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。
//push(x) —— 将元素 x 推入栈中。
//pop() —— 删除栈顶的元素。
//top() —— 获取栈顶元素。
//getMin() —— 检索栈中的最小元素。
//太简单了，不解释

class MinStack {
public:
    /** initialize your data structure here. */
    vector<int> v;
    MinStack() {
        
    }
    
    void push(int x) {
        v.push_back(x);
    }
    
    void pop() {
        v.pop_back();
    }
    
    int top() {
        
        return v[v.size()-1];
    }
    
    int getMin() {
        int min=v[0];
        for(int i=0;i<v.size();i++){
            if(v[i]<min){
                min=v[i];
            }
        }
        return min;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
